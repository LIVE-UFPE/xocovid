#setting the worskspace
directory <- getwd()
setwd(directory)
#Load libraries
library("tseries")
library("forecast")
library("lubridate")
# Fetch command line arguments
cumulativeSum <- commandArgs(trailingOnly = TRUE)
findyear <- function(date){
  #cacth the year in which the time serie begins
  split_string <- unlist(strsplit(as.character(date),"-"))
  year <- split_string[1]
  year <- as.integer(year)
  return(year)
}
dateFormat <- function(dia){
  aux <- unlist(strsplit(as.character(dia),"-"))
  date <- paste0(aux[3],"-",aux[2],"-",aux[1])
  return(date)
}
modelStat <- function(model, real){
  # save a .csv file of the model coefficients
  pearson <- cor(real,model,method = "pearson")
  spearman <- cor(real,model,method = "spearman")
  kendall <- cor(real,model,method = "kendall")
  stats <- c(pearson, spearman, kendall)
  return(stats)
}
# section for testing purposes
#cumulativeSum <- c("base ARIMA/baseARIMA_2020-04-12.csv")
#cumulativeSum <- paste0("/", cumulativeSum)
#Load data
data <- read.csv(cumulativeSum)
# class(data)
# Representing the data in a time-series format
start <- findyear(data$dt_notificacao[1])
tsdata <- ts(data$acumulado_confirmados,  frequency = 365, start = decimal_date(as.Date(data$dt_notificacao[1])))
tsdata <- ts(data$acumulado_confirmados,  frequency = 365, start = decimal_date(as.Date(data$dt_notificacao[1])))
tsdata <- ts(data$acumulado_confirmados,  frequency = 365, start = decimal_date(as.Date(data$dt_notificacao[1])))
tsdata <- ts(data$acumulado_confirmados,  frequency = 365, start = decimal_date(as.Date(data$dt_notificacao[1])))
#setting the worskspace
directory <- getwd()
setwd(directory)
#Load libraries
library("tseries")
library("forecast")
library("lubridate")
library('sweep')
library('timekit')
# Fetch command line arguments
cumulativeSum <- commandArgs(trailingOnly = TRUE)
findyear <- function(date){
  #cacth the year in which the time serie begins
  split_string <- unlist(strsplit(as.character(date),"-"))
  year <- split_string[1]
  year <- as.integer(year)
  return(year)
}
dateFormat <- function(dia){
  aux <- unlist(strsplit(as.character(dia),"-"))
  date <- paste0(aux[3],"-",aux[2],"-",aux[1])
  return(date)
}
modelStat <- function(model, real){
  # save a .csv file of the model coefficients
  pearson <- cor(real,model,method = "pearson")
  spearman <- cor(real,model,method = "spearman")
  kendall <- cor(real,model,method = "kendall")
  stats <- c(pearson, spearman, kendall)
  return(stats)
}
# section for testing purposes
#cumulativeSum <- c("base ARIMA/baseARIMA_2020-04-12.csv")
#cumulativeSum <- paste0("/", cumulativeSum)
#Load data
data <- read.csv(cumulativeSum)
class(data)
# Representing the data in a time-series format
start <- findyear(data$dt_notificacao[1])
tsdata <- ts(data$acumulado_confirmados,  frequency = 365, start = decimal_date(as.Date(data$dt_notificacao[1])))
